
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

/**
 *
 * @author jerbi
 */
public class calcul_indice extends javax.swing.JDialog {

    private float van = 0;

    /**
     * Creates new form calcul_indice
     */
    boolean verif_cash(){
        boolean ok = true;
        DefaultTableModel tb = new DefaultTableModel();
        tb = (DefaultTableModel) jTable2.getModel();
        String trait_cash = tb.getValueAt(0, 1).toString();
        trait_cash=trait_cash.replace(" ", "");
        trait_cash=trait_cash.replace(",", ".");
        int i =1;
        while(i<tb.getRowCount() && ok==true){
            String trait_cash2 = tb.getValueAt(i, 1).toString();
            trait_cash2=trait_cash2.replace(" ", "");
            trait_cash2=trait_cash2.replace(",", ".");
            if(trait_cash.equals(trait_cash2)==true){
                i++;
            }
            else{
                ok=false;
            }
                
        }
        return ok;
    }
    private void arrondi_date(double d){
        int annee = (int)d;
        float inter = (float) (d-annee);
        jLabel4.setText("le délai de récupération est :"+String.valueOf(annee)+" annee");
        if(inter>0){
            int mois = (int) (12*inter);
            inter  = (12*inter)-mois;
            jLabel4.setText("le délai de récupération est :"+String.valueOf(annee)+" annee, "+String.valueOf(mois)+" mois");
            if(inter>0){
                int jour =  (int) inter*365;
                jLabel4.setText("le délai de récupération est :"+String.valueOf(annee)+" annee, "+String.valueOf(mois)+" mois et "+String.valueOf(jour)+" jours");
            
            }
        }
        
        
        
    }
    
    public calcul_indice(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 0));
        jLabel1.setText("Calcul des indices");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("importer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Annee", "Cash Flow"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel2.setText("Capital investi");

        jLabel3.setText("taux d'actualisation");

        jButton2.setText("VAN");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 0, 0));

        jButton3.setText("IP");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 0));

        jButton4.setText("DR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(128, 128, 128)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3)
                            .addComponent(jButton2)
                            .addComponent(jButton4))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(172, 172, 172)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(257, 257, 257)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 124, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 99, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jTable2.removeAll();
        JFileChooser fc = new JFileChooser();
        fc.showOpenDialog(null);
        fc.setDialogTitle("Selectionner un fichier excel");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
        fc.setFileFilter(fnef);
        File excel = fc.getSelectedFile();
        jTextField1.setText(excel.getAbsolutePath());
        try{
            Workbook workbook = new XSSFWorkbook(new FileInputStream(excel));
            Sheet sheet = workbook.getSheetAt(0);
            DefaultTableModel tb = new DefaultTableModel();
            tb.addColumn("annee");
            tb.addColumn("cash flow");
            int i=0;
            for(Row row : sheet){
                if(i==0){
                    i++;
                }
                else{
                    List<String> liste = new ArrayList<>();
                    for(Cell cell : row){
                        liste.add(cell.getStringCellValue());
                    }
                    tb.addRow(liste.toArray());
                }
                
            }
            jTable2.setModel(tb);
        }
        catch(IOException e ){
            System.out.println("erreur "+e.getMessage());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
        
    }//GEN-LAST:event_jTable2MousePressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tb = new DefaultTableModel();
        tb = (DefaultTableModel) jTable2.getModel();
        if(jTextField2.getText().isEmpty()==true || jTextField2.getText().isEmpty()==true){
            JOptionPane.showMessageDialog(null, "Veuillez remplir les données", "ERREUR!", JOptionPane.WARNING_MESSAGE);
        }
        else{
            float somme =0;
            
            String trait_taux = jTextField3.getText().toString();
            if(trait_taux.contains("%")){
                trait_taux= trait_taux.replace("%", "");
            }
            if(trait_taux.contains(" ")){
                trait_taux= trait_taux.replace(" ", "");
            }
            float taux = Float.parseFloat(trait_taux);
            String trait_cap = jTextField2.getText().toString();
            if(trait_cap.contains(",")){
                trait_cap= trait_cap.replace(",", ".");
                
            }
            if(trait_cap.contains(" ")){
                trait_cap= trait_cap.replace(" ", "");   
            }
            Double cap = Double.valueOf(trait_cap);
            
            System.out.println(cap);
            float divis = 1+(taux/100);
            System.out.println(divis);
            for(int i =0 ; i<tb.getRowCount();i++){
                String trait_cash = tb.getValueAt(i, 1).toString();
                trait_cash=trait_cash.replace(" ", "");
                trait_cash=trait_cash.replace(",", ".");   
                
                float cash = Float.parseFloat(trait_cash);
                System.out.println(cash);
                int puis = i+1;
                somme = (float) (somme +(cash/Math.pow(divis,puis)));
                System.out.println(somme);
                
            }
            System.out.println(somme);
            van = (float) (somme-cap);
            jLabel5.setText("la valeur de van est "+String.valueOf(van));
            
            if(van>0){
                JOptionPane.showMessageDialog(null, "la valeur est acceptable vu que le van est positive", "Interpretation!", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "la valeur n'est pas acceptable vu que le van est negative", "Interpretation!", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(van==0){
            JOptionPane.showMessageDialog(null, "Calculer la van avant", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            String trait_cap = jTextField2.getText().toString();
            if(trait_cap.contains(",")){
                trait_cap= trait_cap.replace(",", ".");
                
            }
            if(trait_cap.contains(" ")){
                trait_cap= trait_cap.replace(" ", "");   
            }
            Double cap = Double.valueOf(trait_cap);
            float ip = (float) ((van/cap)+1);
            jLabel6.setText("l'indice de profitabilité est "+String.valueOf(ip));
            if(ip>=1){
                JOptionPane.showMessageDialog(null, "Bon indice", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
               JOptionPane.showMessageDialog(null, "Projet insatisfiable", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);

            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(jTextField2.getText().toString().isEmpty()==true){
            JOptionPane.showMessageDialog(null, "VEUILLEZ DONNNER LE CAPITAL INVESTI", "ERREUR", JOptionPane.WARNING_MESSAGE);

        }
        else{
            boolean ok = verif_cash();
            String trait_cap = jTextField2.getText().toString();
            if(trait_cap.contains(",")){
                trait_cap= trait_cap.replace(",", ".");
                
            }
            if(trait_cap.contains(" ")){
                trait_cap= trait_cap.replace(" ", "");   
            }
            Double cap = Double.valueOf(trait_cap);
            float dr;
            DefaultTableModel tb = new DefaultTableModel();
            tb = (DefaultTableModel) jTable2.getModel();
            if(ok==true){
                String trait_cash = tb.getValueAt(0, 1).toString();
                trait_cash=trait_cash.replace(" ", "");
                trait_cash=trait_cash.replace(",", ".");
                float cash = Float.parseFloat(trait_cash);
                dr = (float) (cap/cash);
                arrondi_date(dr);
            }
            else{
                float cf_cum;
                String trait_cash = tb.getValueAt(0, 1).toString();
                trait_cash=trait_cash.replace(" ", "");
                trait_cash=trait_cash.replace(",", ".");
                float cash = Float.parseFloat(trait_cash);
            
                if(cash>=cap){
                    dr = (float) (cap/cash)+1;
                    arrondi_date(dr);
                }
                else{
                
                    int i = 1 ;
                    cf_cum = cash;
                    while(i<tb.getRowCount()){
                        trait_cash = tb.getValueAt(i, 1).toString();
                        trait_cash=trait_cash.replace(" ", "");
                        trait_cash=trait_cash.replace(",", ".");
                        cash = Float.parseFloat(trait_cash);
                        cf_cum+=cash;
                        if(cf_cum==cap){
                            dr = i+1;
                            jLabel4.setText("le délai de récupération est :"+String.valueOf(dr)+" annnee");
                            break;
                        }
                        else if(cf_cum>cap){
                            dr= (float) (((cap-(cf_cum-cash))/cash)+i);
                            arrondi_date(dr);
                            break;
                        }
                        else{
                            i++;
                        }
                    }
                
                }
                
            }
        }
        
         
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calcul_indice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calcul_indice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calcul_indice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calcul_indice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            calcul_indice dialog = new calcul_indice(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
